name: "Checkov Checks"

description: "Run Terraform plan from PRs and Terraform plan/apply from `main`"
inputs:
  working-directory:
    description: "The directory where the Terraform configuration is located."
    required: true
    default: .
  landingZone:
    description: "The landing zone to be used by checkov"
    required: true
    default: "corp"

branding:
  icon: "coffee"

runs:
  using: "composite"

  steps:
    - name: setup-node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: checkout
      uses: actions/checkout@v4
      with:
        repository: Mars-Cloud-CoE/az2-terraform-actions
        ref: main
        token: ${{ env.USER_READONLY_TOKEN }}
        submodules: 'recursive'
        path: actions       
    - name: setup python
        uses: actions/setup-python@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
             terraform_version: 1.11.4
             terraform_wrapper: false
      - name: terraform plan
        continue-on-error: true
        run: |
          terraform init 
          terraform plan -input=false -no-color -out tfplan.binary
          terraform show -json tfplan.binary > tfplan.json
          ls -la tfplan.json
        env:
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: '2fc13e34-f03f-498b-982a-7cb446e25bc6'
          
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ inputs.working-directory }}
        config_file: ./actions/checkov_checks/checkov/ccoe/checkov_azure_${{ inputs.landingZone }}.yaml
        output_format: junitxml,sarif
        output_file_path: ${{ github.workspace }}/ccoe/results.xml,console
        github_pat: ${{ env.USER_READONLY_TOKEN }}
        download_external_modules: true
        quiet: true

    - name: Install datadog CI CLI
      if: always()
      id: datadog_cli
      run: npm install -g @datadog/datadog-ci
      shell: bash
    - name: upload checkov results xml to datadog
      if: always()
      env:
        DD_ENV: az
        DATADOG_API_KEY: ${{ env.DATADOG_API_KEY }}
        DATADOG_SITE: us3.datadoghq.com
      run: datadog-ci junit upload --service terraform ${{ github.workspace }}/ccoe/results.xml
      shell: bash
