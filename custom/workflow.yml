# metadata:
#   name: "ensures app tag exists"
#   id: "Azure"
#   category: "tagging"
#   severity: "HIGH"

# check:
#   scope:
#     provider: "azure"
#     block_type: "resource"
#   definition:
#     - cond_type: "attribute"
#       attribute: "tags.app"
#       operator: "exists"
metadata:
  name: "ensures app tag exists"
  id: "CKV_AZURE_001"
  category: "tagging"
  severity: "HIGH"
  type: "terraform"  # Specify it's for Terraform resources

check:
  scope:
    provider: "azure"    # Specify the cloud provider as Azure
    block_type: "resource"  # We're targeting resource blocks in Terraform
  definition:
    - cond_type: "attribute"  # Check an attribute (in this case, the "tags" attribute)
      attribute: "tags.app"   # We're checking that the "app" tag exists
      operator: "exists"      # The condition is that this attribute should exist

  # and:
    # - cond_type: "filter"
    #   attribute: "resource_type"
    #   operator: "not_in"
    #   value:
    #     - "azure_virtual_machine"
    #     - "Microsoft.Compute/virtualMachines/extensions"
    #     - "Microsoft.AlertsManagement/smartDetectorAlertRules"
    #     - "microsoft.insights/actiongroups"
    #     - "Microsoft.Security/automations"
    #     - "Microsoft.Network/networkWatchers"
    #     - "Microsoft.Network/networkWatchers/connectionMonitors"
    #     - "Microsoft.Network/networkWatchers/flowLogs"
    #     - "Microsoft.Network/networkWatchers/lenses"
    #     - "Microsoft.Network/networkWatchers/pingMeshes"
    #     - "Microsoft.Network/virtualHubs"
    #     - "Microsoft.Resources/deployments"
    #     - "Microsoft.ResourceGraph/queries"
    #     - "Microsoft.OperationsManagement/solutions"
    #     - "Microsoft.Network/networkSecurityGroups"
    #     - "Microsoft.Automation/AutomationAccounts/Runbooks"
    #     - "microsoft.web/connections"
    

  
